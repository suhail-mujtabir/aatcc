@import "tailwindcss";
html {
  scroll-behavior: smooth;
}

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  margin: 0;
  padding: 0;
  background: transparent;
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

@keyframes stroke-draw {
  to {
    stroke-dashoffset: 0;
  }
}

.animate-stroke-draw {
  animation: stroke-draw 2s linear forwards;
}
@tailwind base;
@tailwind components;
@tailwind utilities;

.hero-with-overlay::before {
  content: '';
  position: absolute;
  inset: 0; /* This is equivalent to top: 0; right: 0; bottom: 0; left: 0; */
  background-color: rgba(0, 0, 0, 0.6); /* This creates the black overlay with 50% opacity */
  z-index: 0; /* Puts the overlay on the bottom of the stacking context */
}

/* Ensure the hero background image itself is set up correctly */
.hero-with-overlay {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}
/* In app/globals.css */

body {
  font-family: 'Inter', sans-serif;
  overflow-x: hidden;
}
.input-field {
  transition: all 0.3s ease;
}
.input-field:focus-within {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px -10px rgba(59, 130, 246, 0.5);
}
.floating-label {
  transition: all 0.3s ease;
}
/* This logic is now handled by React state, but the styles are still needed */
.input-field:focus-within .floating-label,
.input-field .floating-label.active {
  transform: translateY(-36px) scale(0.80);
  color: #3b82f6;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  padding: 0 4px;
}
.dark .input-field:focus-within .floating-label,
.dark .input-field .floating-label.active {
    background-color: rgb(33, 50, 85/ var(--tw-bg-opacity)); /* Corresponds to dark:bg-gray-800/80 */
}
.toggle-checkbox:checked {
  right: 0;
  border-color: #3b82f6;
  transform: translateX(1.75rem); /* Moves the toggle switch */
}
.toggle-checkbox {
  transition: transform 0.3s ease;
}
.toggle-label {
  transition: background-color 0.3s ease;
}
#vanta-bg {
  position: fixed; /* Use fixed to ensure it covers the viewport */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}
.btn-primary {
  position: relative;
  overflow: hidden;
}
.btn-primary::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%);
  transform-origin: 50% 50%;
}
.btn-primary:focus:not(:active)::after {
  animation: ripple 1s ease-out;
}
@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  100% {
    transform: scale(40, 40);
    opacity: 0;
  }
  
}
.dark .dark\:bg-gray-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}
.dark\:text-gray-100:is(.dark *)
{
  --tw-text-opacity: 1;
  color: rgb(243 244 246 / var(--tw-text-opacity, 1))
}
.dark\:bg-gray-900:is(.dark *)
{
  --tw-bg-opacity: 1;

}
.dark\:bg-gray-800\/80:is(.dark *)
{
  background-color: rgb(31 41 55 / 0.8);
}
.dark\:text-white:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}
.dark\:text-gray-300:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity, 1));
}
.dark\:bg-gray-700\/50:is(.dark *) {
  background-color: rgb(55 65 81 / 0.5);
}
.dark\:border-gray-600:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity, 1));
}
.toggle-checkbox:checked {
  right: 0;
  background-color: #3b82f6;
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}
.border-4 {
  border-width: 4px;
}
.toggle-checkbox:checked + .toggle-label {
  background-color: #1e40af;
}
.dark\:bg-gray-600:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity, 1));
}
.rounded-full {
  border-radius: 9999px;
}
.toggle-checkbox:checked {
  right: 0;
  background-color: #3b82f6;
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}
.border-4 {
  border-width: 4px;
}
